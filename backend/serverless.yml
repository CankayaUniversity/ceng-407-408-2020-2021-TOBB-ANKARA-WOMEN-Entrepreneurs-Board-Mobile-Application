service: tobb-kgk-wcoop-serverless

provider:
  name: aws
  runtime: java11
  profile: kgk-user
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"

package:
  artifact: target/tobb-kgk-wcoop-0.1.jar

functions:
  tobb-kgk-micronaut-wcoop:
    handler: com.kgk.LambdaHandler::handleRequest
#    handler: io.micronaut.function.aws.proxy.MicronautLambdaHandler
    environment:
      MICRONAUT_ENVIRONMENTS: ${opt:stage, 'dev'}
    events:
      - http: ANY {proxy+}

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: roleId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: roleId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    catalogsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Catalogs
        AttributeDefinitions:
          - AttributeName: catalogId
            AttributeType: S
          - AttributeName: roleId
            AttributeType: S
        KeySchema:
          - AttributeName: catalogId
            KeyType: HASH
          - AttributeName: roleId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    newsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: News
        AttributeDefinitions:
          - AttributeName: newsId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: newsId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
      groupsTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: Groups
          AttributeDefinitions:
            - AttributeName: GroupId
              AttributeType: S
            - AttributeName: createdBy
              AttributeType: S
          KeySchema:
            - AttributeName: groupId
              KeyType: HASH
            - AttributeName: createdBy
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      groupMembersTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: GroupMembers
          AttributeDefinitions:
            - AttributeName: userId
              AttributeType: S
            - AttributeName: groupId
              AttributeType: S
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: groupId
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      groupMessagesTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: GroupMessages
          AttributeDefinitions:
            - AttributeName: messageId
              AttributeType: S
            - AttributeName: groupId
              AttributeType: S
          KeySchema:
            - AttributeName: messageId
              KeyType: HASH
            - AttributeName: groupId
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      registerFormsTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: RegisterForms
          AttributeDefinitions:
            - AttributeName: registerId
              AttributeType: S
            - AttributeName: city
              AttributeType: S
          KeySchema:
            - AttributeName: registerId
              KeyType: HASH
            - AttributeName: city
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      rolesTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: Roles
          AttributeDefinitions:
            - AttributeName: roleId
              AttributeType: S
            - AttributeName: roleName
              AttributeType: S
          KeySchema:
            - AttributeName: roleId
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      #userRolesTable:
      #  Type: AWS::DynamoDB::Table
      #  Properties:
      #    TableName: UserRoles
      #    AttributeDefinitions:
      #      - AttributeName: userId
      #        AttributeType: S
      #      - AttributeName: roleId
      #        AttributeType: S
      #    KeySchema:
      #      - AttributeName: userId
      #        KeyType: HASH
      #      - AttributeName: roleId
      #        KeyType: RANGE
      #    ProvisionedThroughput:
      #      ReadCapacityUnits: 5
      #      WriteCapacityUnits: 5
